import { updateTableData } from "../abex/relicEstimate.js";
import { savedObj, storedValue } from "../components/helper.js";
import { Input } from "../model/constants.js";
import { IconizedInput } from "./iconized.js";
export const stam = "https://i.imgur.com/n5WOzSZ.png";
const ess = "https://i.imgur.com/Gw216PZ.png";
const bpEnter = "https://i.imgur.com/j6qEANW.png";
const bpEnterImg = "https://i.imgur.com/QxSfSFU.png";
const clName = "abex input resource";
export class Stamina extends IconizedInput {
    constructor() {
        super(0, stam, "ex-food");
        this.width = 42;
        this.height = 46;
        this.buttons = true;
        this.cssName = clName;
        this.value = parseInt(this.init());
    }
}
export class Essence extends IconizedInput {
    lastUpdate;
    hoursSinceLastUpdate;
    constructor() {
        super(0, ess, "essence");
        this.width = 32;
        this.height = 32;
        this.cssName = clName;
        this.value = parseInt(this.init());
        const updated = savedObj(`${this.name}-timestamp`, new Date());
        if (updated) {
            const now = new Date();
            this.hoursSinceLastUpdate = (now.getTime() - updated.getTime()) / 3600000;
            this.lastUpdate = updated;
        }
        const fn = (y) => {
            if (y >= 0) {
                this.value = y;
                storedValue(this.name, this.value);
                storedValue(`${this.name}-timestamp`, new Date());
                updateTableData();
            }
        };
        this.update = fn;
    }
}
export class Spectators extends IconizedInput {
    constructor(n) {
        super(0, bpEnter, "mil-specs");
        this.cssName = clName;
        this.buttons = true;
        this.value = 0;
        if (n) {
            this.value = n;
        }
    }
}
export class StarOfDawn extends IconizedInput {
    status;
    hasSpectator;
    constructor() {
        super(0, bpEnterImg, "mil-sod", Input.CheckBox);
        this.width = 40;
        this.height = 41;
        this.cssName = clName;
        this.update = (y) => {
            this.hasSpectator = !this.hasSpectator;
        };
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJleC1yZXNvdXJjZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy90eXBlcy9hYmV4LXJlc291cmNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsUUFBUSxFQUFFLFdBQVcsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ2hFLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUM5QyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTlDLE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBRyxpQ0FBaUMsQ0FBQztBQUN0RCxNQUFNLEdBQUcsR0FBRyxpQ0FBaUMsQ0FBQztBQUM5QyxNQUFNLE9BQU8sR0FBRyxpQ0FBaUMsQ0FBQztBQUNsRCxNQUFNLFVBQVUsR0FBRyxpQ0FBaUMsQ0FBQztBQUVyRCxNQUFNLE1BQU0sR0FBRyxxQkFBcUIsQ0FBQztBQUVyQyxNQUFNLE9BQU8sT0FBUSxTQUFRLGFBQWE7SUFDeEM7UUFDRSxLQUFLLENBQUMsQ0FBQyxFQUFFLElBQUksRUFBRSxTQUFTLENBQUMsQ0FBQztRQUMxQixJQUFJLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztRQUNoQixJQUFJLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQztRQUNqQixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztRQUNwQixJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztRQUN0QixJQUFJLENBQUMsS0FBSyxHQUFHLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQztJQUNyQyxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sT0FBUSxTQUFRLGFBQWE7SUFDeEMsVUFBVSxDQUFPO0lBQ2pCLG9CQUFvQixDQUFTO0lBQzdCO1FBQ0UsS0FBSyxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDekIsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7UUFDaEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUM7UUFDakIsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDdEIsSUFBSSxDQUFDLEtBQUssR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7UUFDbkMsTUFBTSxPQUFPLEdBQVMsUUFBUSxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksWUFBWSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztRQUNyRSxJQUFJLE9BQU8sRUFBRSxDQUFDO1lBQ1osTUFBTSxHQUFHLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQztZQUN2QixJQUFJLENBQUMsb0JBQW9CLEdBQUcsQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLEdBQUcsT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDLEdBQUcsT0FBTyxDQUFDO1lBQzFFLElBQUksQ0FBQyxVQUFVLEdBQUcsT0FBTyxDQUFDO1FBQzVCLENBQUM7UUFDRCxNQUFNLEVBQUUsR0FBRyxDQUFDLENBQVMsRUFBRSxFQUFFO1lBQ3ZCLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDO2dCQUNYLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO2dCQUNmLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztnQkFDbkMsV0FBVyxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksWUFBWSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztnQkFDbEQsZUFBZSxFQUFFLENBQUM7WUFDcEIsQ0FBQztRQUNILENBQUMsQ0FBQztRQUNGLElBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxDQUFDO0lBQ25CLENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxVQUFXLFNBQVEsYUFBYTtJQUczQyxZQUFZLENBQVU7UUFDcEIsS0FBSyxDQUFDLENBQUMsRUFBRSxPQUFPLEVBQUUsV0FBVyxDQUFDLENBQUM7UUFDL0IsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDdEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7UUFDcEIsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7UUFDZixJQUFJLENBQUMsRUFBRSxDQUFDO1lBQ04sSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7UUFDakIsQ0FBQztJQUNILENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxVQUFXLFNBQVEsYUFBYTtJQUMzQyxNQUFNLENBQVU7SUFDaEIsWUFBWSxDQUFVO0lBQ3RCO1FBQ0UsS0FBSyxDQUFDLENBQUMsRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNoRCxJQUFJLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztRQUNoQixJQUFJLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQztRQUNqQixJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztRQUV0QixJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBUyxFQUFFLEVBQUU7WUFDMUIsSUFBSSxDQUFDLFlBQVksR0FBRyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUM7UUFDekMsQ0FBQyxDQUFDO0lBQ0osQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXBkYXRlVGFibGVEYXRhIH0gZnJvbSBcIi4uL2FiZXgvcmVsaWNFc3RpbWF0ZS5qc1wiO1xuaW1wb3J0IHsgc2F2ZWRPYmosIHN0b3JlZFZhbHVlIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvaGVscGVyLmpzXCI7XG5pbXBvcnQgeyBJbnB1dCB9IGZyb20gXCIuLi9tb2RlbC9jb25zdGFudHMuanNcIjtcbmltcG9ydCB7IEljb25pemVkSW5wdXQgfSBmcm9tIFwiLi9pY29uaXplZC5qc1wiO1xuXG5leHBvcnQgY29uc3Qgc3RhbSA9IFwiaHR0cHM6Ly9pLmltZ3VyLmNvbS9uNVdPelNaLnBuZ1wiO1xuY29uc3QgZXNzID0gXCJodHRwczovL2kuaW1ndXIuY29tL0d3MjE2UFoucG5nXCI7XG5jb25zdCBicEVudGVyID0gXCJodHRwczovL2kuaW1ndXIuY29tL2o2cUVBTlcucG5nXCI7XG5jb25zdCBicEVudGVySW1nID0gXCJodHRwczovL2kuaW1ndXIuY29tL1F4U2ZTRlUucG5nXCI7XG4vLyBjb25zdCBjbE5hbWUgPSBcIlwiO1xuY29uc3QgY2xOYW1lID0gXCJhYmV4IGlucHV0IHJlc291cmNlXCI7XG5cbmV4cG9ydCBjbGFzcyBTdGFtaW5hIGV4dGVuZHMgSWNvbml6ZWRJbnB1dCB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKDAsIHN0YW0sIFwiZXgtZm9vZFwiKTtcbiAgICB0aGlzLndpZHRoID0gNDI7XG4gICAgdGhpcy5oZWlnaHQgPSA0NjtcbiAgICB0aGlzLmJ1dHRvbnMgPSB0cnVlO1xuICAgIHRoaXMuY3NzTmFtZSA9IGNsTmFtZTtcbiAgICB0aGlzLnZhbHVlID0gcGFyc2VJbnQodGhpcy5pbml0KCkpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBFc3NlbmNlIGV4dGVuZHMgSWNvbml6ZWRJbnB1dCB7XG4gIGxhc3RVcGRhdGU6IERhdGU7XG4gIGhvdXJzU2luY2VMYXN0VXBkYXRlOiBudW1iZXI7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKDAsIGVzcywgXCJlc3NlbmNlXCIpO1xuICAgIHRoaXMud2lkdGggPSAzMjtcbiAgICB0aGlzLmhlaWdodCA9IDMyO1xuICAgIHRoaXMuY3NzTmFtZSA9IGNsTmFtZTtcbiAgICB0aGlzLnZhbHVlID0gcGFyc2VJbnQodGhpcy5pbml0KCkpO1xuICAgIGNvbnN0IHVwZGF0ZWQ6IERhdGUgPSBzYXZlZE9iaihgJHt0aGlzLm5hbWV9LXRpbWVzdGFtcGAsIG5ldyBEYXRlKCkpO1xuICAgIGlmICh1cGRhdGVkKSB7XG4gICAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpO1xuICAgICAgdGhpcy5ob3Vyc1NpbmNlTGFzdFVwZGF0ZSA9IChub3cuZ2V0VGltZSgpIC0gdXBkYXRlZC5nZXRUaW1lKCkpIC8gMzYwMDAwMDtcbiAgICAgIHRoaXMubGFzdFVwZGF0ZSA9IHVwZGF0ZWQ7XG4gICAgfVxuICAgIGNvbnN0IGZuID0gKHk6IG51bWJlcikgPT4ge1xuICAgICAgaWYgKHkgPj0gMCkge1xuICAgICAgICB0aGlzLnZhbHVlID0geTtcbiAgICAgICAgc3RvcmVkVmFsdWUodGhpcy5uYW1lLCB0aGlzLnZhbHVlKTtcbiAgICAgICAgc3RvcmVkVmFsdWUoYCR7dGhpcy5uYW1lfS10aW1lc3RhbXBgLCBuZXcgRGF0ZSgpKTtcbiAgICAgICAgdXBkYXRlVGFibGVEYXRhKCk7XG4gICAgICB9XG4gICAgfTtcbiAgICB0aGlzLnVwZGF0ZSA9IGZuO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBTcGVjdGF0b3JzIGV4dGVuZHMgSWNvbml6ZWRJbnB1dCB7XG4gIGNvbnN0cnVjdG9yKCk7XG4gIGNvbnN0cnVjdG9yKG46IG51bWJlcik7XG4gIGNvbnN0cnVjdG9yKG4/OiBudW1iZXIpIHtcbiAgICBzdXBlcigwLCBicEVudGVyLCBcIm1pbC1zcGVjc1wiKTtcbiAgICB0aGlzLmNzc05hbWUgPSBjbE5hbWU7XG4gICAgdGhpcy5idXR0b25zID0gdHJ1ZTtcbiAgICB0aGlzLnZhbHVlID0gMDtcbiAgICBpZiAobikge1xuICAgICAgdGhpcy52YWx1ZSA9IG47XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBTdGFyT2ZEYXduIGV4dGVuZHMgSWNvbml6ZWRJbnB1dCB7XG4gIHN0YXR1czogYm9vbGVhbjtcbiAgaGFzU3BlY3RhdG9yOiBib29sZWFuO1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigwLCBicEVudGVySW1nLCBcIm1pbC1zb2RcIiwgSW5wdXQuQ2hlY2tCb3gpO1xuICAgIHRoaXMud2lkdGggPSA0MDtcbiAgICB0aGlzLmhlaWdodCA9IDQxO1xuICAgIHRoaXMuY3NzTmFtZSA9IGNsTmFtZTtcblxuICAgIHRoaXMudXBkYXRlID0gKHk6IG51bWJlcikgPT4ge1xuICAgICAgdGhpcy5oYXNTcGVjdGF0b3IgPSAhdGhpcy5oYXNTcGVjdGF0b3I7XG4gICAgfTtcbiAgfVxufVxuIl19