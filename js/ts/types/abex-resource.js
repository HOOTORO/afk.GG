import { updateTableData } from "../abex/relicEstimate.js";
import { savedObj, storedValue } from "../components/helper.js";
import { Input } from "../model/constants.js";
import { BossManager } from "./boss.js";
import { IconizedInput } from "./iconized.js";
export const stam = "https://i.imgur.com/n5WOzSZ.png";
const ess = "https://i.imgur.com/Gw216PZ.png";
const bpEnter = "https://i.imgur.com/j6qEANW.png";
const bpEnterImg = "https://i.imgur.com/QxSfSFU.png";
const clName = "abex input resource";
export class Stamina extends IconizedInput {
    constructor() {
        super(0, stam, `team-food`);
        this.width = 42;
        this.height = 46;
        this.buttons = true;
        this.cssName = clName;
        this.value = parseInt(this.init());
    }
    setValue(n) {
        this.value = n;
        this.update(n);
        document.querySelector(`input[name=${this.name}]`).value = `${n}`;
    }
    BossAttacks() {
        return Math.floor(this.value / BossManager.foodCost);
    }
    RetryLimit() {
        return Math.floor((this.value % BossManager.foodCost) / BossManager.retry);
    }
}
export class Essence extends IconizedInput {
    lastUpdate;
    hoursSinceLastUpdate;
    constructor() {
        super(0, ess, "essence");
        this.width = 32;
        this.height = 32;
        this.cssName = clName;
        this.value = parseInt(this.init());
        const updated = savedObj(`${this.name}-timestamp`, new Date());
        if (updated) {
            const now = new Date();
            this.hoursSinceLastUpdate = (now.getTime() - updated.getTime()) / 3600000;
            this.lastUpdate = updated;
        }
        const fn = (y) => {
            if (y >= 0) {
                this.value = y;
                storedValue(this.name, this.value);
                storedValue(`${this.name}-timestamp`, new Date());
                updateTableData();
            }
        };
        this.update = fn;
    }
}
export class Spectators extends IconizedInput {
    constructor(n) {
        super(0, bpEnter, "mil-specs");
        this.cssName = clName;
        this.buttons = true;
        this.value = 0;
        if (n) {
            this.value = n;
        }
    }
}
export class StarOfDawn extends IconizedInput {
    status;
    hasSpectator;
    constructor() {
        super(0, bpEnterImg, "mil-sod", Input.CheckBox);
        this.width = 40;
        this.height = 41;
        this.cssName = clName;
        this.update = (y) => {
            this.hasSpectator = !this.hasSpectator;
        };
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJleC1yZXNvdXJjZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy90eXBlcy9hYmV4LXJlc291cmNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsUUFBUSxFQUFFLFdBQVcsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ2hFLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUM5QyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ3hDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFOUMsTUFBTSxDQUFDLE1BQU0sSUFBSSxHQUFHLGlDQUFpQyxDQUFDO0FBQ3RELE1BQU0sR0FBRyxHQUFHLGlDQUFpQyxDQUFDO0FBQzlDLE1BQU0sT0FBTyxHQUFHLGlDQUFpQyxDQUFDO0FBQ2xELE1BQU0sVUFBVSxHQUFHLGlDQUFpQyxDQUFDO0FBRXJELE1BQU0sTUFBTSxHQUFHLHFCQUFxQixDQUFDO0FBRXJDLE1BQU0sT0FBTyxPQUFRLFNBQVEsYUFBYTtJQUN4QztRQUNFLEtBQUssQ0FBQyxDQUFDLEVBQUUsSUFBSSxFQUFFLFdBQVcsQ0FBQyxDQUFDO1FBQzVCLElBQUksQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDO1FBQ2hCLElBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxLQUFLLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFFRCxRQUFRLENBQUMsQ0FBUztRQUNoQixJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztRQUNmLElB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Q2pCLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO1FBRXRCLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFTLEVBQUUsRUFBRTtZQUMxQixJQUFJLENBQUMsWUFBWSxHQUFHLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQztRQUN6QyxDQUFDLENBQUM7SUFDSixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1cGRhdGVUYWJsZURhdGEgfSBmcm9tIFwiLi4vYWJleC9yZWxpY0VzdGltYXRlLmpzXCI7XG5pbXBvcnQgeyBzYXZlZE9iaiwgc3RvcmVkVmFsdWUgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9oZWxwZXIuanNcIjtcbmltcG9ydCB7IElucHV0IH0gZnJvbSBcIi4uL21vZGVsL2NvbnN0YW50cy5qc1wiO1xuaW1wb3J0IHsgQm9zc01hbmFnZXIgfSBmcm9tIFwiLi9ib3NzLmpzXCI7XG5pbXBvcnQgeyBJY29uaXplZElucHV0IH0gZnJvbSBcIi4vaWNvbml6ZWQuanNcIjtcblxuZXhwb3J0IGNvbnN0IHN0YW0gPSBcImh0dHBzOi8vaS5pbWd1ci5jb20vbjVXT3pTWi5wbmdcIjtcbmNvbnN0IGVzcyA9IFwiaHR0cHM6Ly9pLmltZ3VyLmNvbS9HdzIxNlBaLnBuZ1wiO1xuY29uc3QgYnBFbnRlciA9IFwiaHR0cHM6Ly9pLmltZ3VyLmNvbS9qNnFFQU5XLnBuZ1wiO1xuY29uc3QgYnBFbnRlckltZyA9IFwiaHR0cHM6Ly9pLmltZ3VyLmNvbS9ReFNmU0ZVLnBuZ1wiO1xuLy8gY29uc3QgY2xOYW1lID0gXCJcIjtcbmNvbnN0IGNsTmFtZSA9IFwiYWJleCBpbnB1dCByZXNvdXJjZVwiO1xuXG5leHBvcnQgY2xhc3MgU3RhbWluYSBleHRlbmRzIEljb25pemVkSW5wdXQge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigwLCBzdGFtLCBgdGVhbS1mb29kYCk7XG4gICAgdGhpcy53aWR0aCA9IDQyO1xuICAgIHRoaXMuaGVpZ2h0ID0gNDY7XG4gICAgdGhpcy5idXR0b25zID0gdHJ1ZTtcbiAgICB0aGlzLmNzc05hbWUgPSBjbE5hbWU7XG4gICAgdGhpcy52YWx1ZSA9IHBhcnNlSW50KHRoaXMuaW5pdCgpKTtcbiAgfVxuXG4gIHNldFZhbHVlKG46IG51bWJlcikge1xuICAgIHRoaXMudmFsdWUgPSBuO1xuICAgIHRoaXMudXBkYXRlKG4pO1xuICAgIChcbiAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYGlucHV0W25hbWU9JHt0aGlzLm5hbWV9XWApIGFzIEhUTUxJbnB1dEVsZW1lbnRcbiAgICApLnZhbHVlID0gYCR7bn1gO1xuICB9XG5cbiAgQm9zc0F0dGFja3MoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gTWF0aC5mbG9vcih0aGlzLnZhbHVlIC8gQm9zc01hbmFnZXIuZm9vZENvc3QpO1xuICB9XG4gIFJldHJ5TGltaXQoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gTWF0aC5mbG9vcigodGhpcy52YWx1ZSAlIEJvc3NNYW5hZ2VyLmZvb2RDb3N0KSAvIEJvc3NNYW5hZ2VyLnJldHJ5KTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgRXNzZW5jZSBleHRlbmRzIEljb25pemVkSW5wdXQge1xuICBsYXN0VXBkYXRlOiBEYXRlO1xuICBob3Vyc1NpbmNlTGFzdFVwZGF0ZTogbnVtYmVyO1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigwLCBlc3MsIFwiZXNzZW5jZVwiKTtcbiAgICB0aGlzLndpZHRoID0gMzI7XG4gICAgdGhpcy5oZWlnaHQgPSAzMjtcbiAgICB0aGlzLmNzc05hbWUgPSBjbE5hbWU7XG4gICAgdGhpcy52YWx1ZSA9IHBhcnNlSW50KHRoaXMuaW5pdCgpKTtcbiAgICBjb25zdCB1cGRhdGVkOiBEYXRlID0gc2F2ZWRPYmooYCR7dGhpcy5uYW1lfS10aW1lc3RhbXBgLCBuZXcgRGF0ZSgpKTtcbiAgICBpZiAodXBkYXRlZCkge1xuICAgICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKTtcbiAgICAgIHRoaXMuaG91cnNTaW5jZUxhc3RVcGRhdGUgPSAobm93LmdldFRpbWUoKSAtIHVwZGF0ZWQuZ2V0VGltZSgpKSAvIDM2MDAwMDA7XG4gICAgICB0aGlzLmxhc3RVcGRhdGUgPSB1cGRhdGVkO1xuICAgIH1cbiAgICBjb25zdCBmbiA9ICh5OiBudW1iZXIpID0+IHtcbiAgICAgIGlmICh5ID49IDApIHtcbiAgICAgICAgdGhpcy52YWx1ZSA9IHk7XG4gICAgICAgIHN0b3JlZFZhbHVlKHRoaXMubmFtZSwgdGhpcy52YWx1ZSk7XG4gICAgICAgIHN0b3JlZFZhbHVlKGAke3RoaXMubmFtZX0tdGltZXN0YW1wYCwgbmV3IERhdGUoKSk7XG4gICAgICAgIHVwZGF0ZVRhYmxlRGF0YSgpO1xuICAgICAgfVxuICAgIH07XG4gICAgdGhpcy51cGRhdGUgPSBmbjtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgU3BlY3RhdG9ycyBleHRlbmRzIEljb25pemVkSW5wdXQge1xuICBjb25zdHJ1Y3RvcigpO1xuICBjb25zdHJ1Y3RvcihuOiBudW1iZXIpO1xuICBjb25zdHJ1Y3RvcihuPzogbnVtYmVyKSB7XG4gICAgc3VwZXIoMCwgYnBFbnRlciwgXCJtaWwtc3BlY3NcIik7XG4gICAgdGhpcy5jc3NOYW1lID0gY2xOYW1lO1xuICAgIHRoaXMuYnV0dG9ucyA9IHRydWU7XG4gICAgdGhpcy52YWx1ZSA9IDA7XG4gICAgaWYgKG4pIHtcbiAgICAgIHRoaXMudmFsdWUgPSBuO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgU3Rhck9mRGF3biBleHRlbmRzIEljb25pemVkSW5wdXQge1xuICBzdGF0dXM6IGJvb2xlYW47XG4gIGhhc1NwZWN0YXRvcjogYm9vbGVhbjtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoMCwgYnBFbnRlckltZywgXCJtaWwtc29kXCIsIElucHV0LkNoZWNrQm94KTtcbiAgICB0aGlzLndpZHRoID0gNDA7XG4gICAgdGhpcy5oZWlnaHQgPSA0MTtcbiAgICB0aGlzLmNzc05hbWUgPSBjbE5hbWU7XG5cbiAgICB0aGlzLnVwZGF0ZSA9ICh5OiBudW1iZXIpID0+IHtcbiAgICAgIHRoaXMuaGFzU3BlY3RhdG9yID0gIXRoaXMuaGFzU3BlY3RhdG9yO1xuICAgIH07XG4gIH1cbn1cbiJdfQ==