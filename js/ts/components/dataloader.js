import { GameMode, ValueModes } from "../model/constants.js";
import { fetchTableData } from "./gsheets.js";
let rewards = [];
function getRewards() {
    return rewards;
}
function modeRewards() {
    const modes = [GameMode.CR, GameMode.TS, GameMode.NC];
    return modes.map((x) => {
        return {
            mode: x,
            table: fetchTableData(x),
        };
    });
}
function loadRewards(gm, gt) {
    gt.rows.forEach((v) => {
        const rank = v.c[0].v, pairs = v.c
            .slice(1, v.c.length)
            .map((v, i) => {
            const col1rank = gt.cols[i + 1].label, qty = v ? v.v : 0;
            return {
                type: col1rank,
                label: col1rank,
                img: `/assets/icons/s/${col1rank}.png`,
                amount: qty,
            };
        });
        rewards.push({ mode: ValueModes.gMode(gm), rank: rank, rewards: pairs });
    });
    return rewards;
}
export { getRewards, loadRewards, modeRewards, rewards };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YWxvYWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2RhdGFsb2FkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUU3RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBRTlDLElBQUksT0FBTyxHQUFpQixFQUFFLENBQUM7QUFFL0IsU0FBUyxVQUFVO0lBQ2pCLE9BQU8sT0FBTyxDQUFDO0FBQ2pCLENBQUM7QUFDRCxTQUFTLFdBQVc7SUFDbEIsTUFBTSxLQUFLLEdBQUcsQ0FBQyxRQUFRLENBQUMsRUFBRSxFQUFFLFFBQVEsQ0FBQyxFQUFFLEVBQUUsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3RELE9BQU8sS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFO1FBQ3JCLE9BQU87WUFDTCxJQUFJLEVBQUUsQ0FBQztZQUNQLEtBQUssRUFBRSxjQUFjLENBQUMsQ0FBVyxDQUFDO1NBQ25DLENBQUM7SUFDSixDQUFDLENBQUMsQ0FBQztBQUNMLENBQUM7QUFFRCxTQUFTLFdBQVcsQ0FBQyxFQUFZLEVBQUUsRUFBVTtJQUMzQyxFQUFFLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFO1FBQ3BCLE1BQU0sSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUNuQixLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUM7YUFDUixLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDO2FBRXBCLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUNaLE1BQU0sUUFBUSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFDbkMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUUsQ0FBQyxDQUFDLENBQXVCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUMzQyxPQUFPO2dCQUNMLElBQUksRUFBRSxRQUFRO2dCQUNkLEtBQUssRUFBRSxRQUFRO2dCQUNmLEdBQUcsRUFBRSxtQkFBbUIsUUFBUSxNQUFNO2dCQUN0QyxNQUFNLEVBQUUsR0FBRzthQUNFLENBQUM7UUFDbEIsQ0FBQyxDQUFDLENBQUM7UUFDUCxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsSUFBSSxFQUFFLFVBQVUsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztJQUMzRSxDQUFDLENBQUMsQ0FBQztJQUNILE9BQU8sT0FBTyxDQUFDO0FBQ2pCLENBQUM7QUFFRCxPQUFPLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxXQUFXLEVBQUUsT0FBTyxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHYW1lTW9kZSwgVmFsdWVNb2RlcyB9IGZyb20gXCIuLi9tb2RlbC9jb25zdGFudHMuanNcIjtcbmltcG9ydCB7IEJhc2VSZXNRdHksIEdzaGVldCwgUmFua1Jld2FyZCB9IGZyb20gXCIuLi9tb2RlbC90eXBlcy5qc1wiO1xuaW1wb3J0IHsgZmV0Y2hUYWJsZURhdGEgfSBmcm9tIFwiLi9nc2hlZXRzLmpzXCI7XG5cbmxldCByZXdhcmRzOiBSYW5rUmV3YXJkW10gPSBbXTtcblxuZnVuY3Rpb24gZ2V0UmV3YXJkcygpOiBSYW5rUmV3YXJkW10ge1xuICByZXR1cm4gcmV3YXJkcztcbn1cbmZ1bmN0aW9uIG1vZGVSZXdhcmRzKCkge1xuICBjb25zdCBtb2RlcyA9IFtHYW1lTW9kZS5DUiwgR2FtZU1vZGUuVFMsIEdhbWVNb2RlLk5DXTtcbiAgcmV0dXJuIG1vZGVzLm1hcCgoeCkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICBtb2RlOiB4LFxuICAgICAgdGFibGU6IGZldGNoVGFibGVEYXRhKHggYXMgc3RyaW5nKSxcbiAgICB9O1xuICB9KTtcbn1cblxuZnVuY3Rpb24gbG9hZFJld2FyZHMoZ206IEdhbWVNb2RlLCBndDogR3NoZWV0KSB7XG4gIGd0LnJvd3MuZm9yRWFjaCgodikgPT4ge1xuICAgIGNvbnN0IHJhbmsgPSB2LmNbMF0udixcbiAgICAgIHBhaXJzID0gdi5jXG4gICAgICAgIC5zbGljZSgxLCB2LmMubGVuZ3RoKVxuICAgICAgICAvLyAuZmlsdGVyKChnKSA9PiAoZyAmJiAoZy52IGFzIHVua25vd24gYXMgbnVtYmVyKSkgPiAwKVxuICAgICAgICAubWFwKCh2LCBpKSA9PiB7XG4gICAgICAgICAgY29uc3QgY29sMXJhbmsgPSBndC5jb2xzW2kgKyAxXS5sYWJlbCxcbiAgICAgICAgICAgIHF0eSA9IHYgPyAodi52IGFzIHVua25vd24gYXMgbnVtYmVyKSA6IDA7XG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHR5cGU6IGNvbDFyYW5rLFxuICAgICAgICAgICAgbGFiZWw6IGNvbDFyYW5rLFxuICAgICAgICAgICAgaW1nOiBgL2Fzc2V0cy9pY29ucy9zLyR7Y29sMXJhbmt9LnBuZ2AsXG4gICAgICAgICAgICBhbW91bnQ6IHF0eSxcbiAgICAgICAgICB9IGFzIEJhc2VSZXNRdHk7XG4gICAgICAgIH0pO1xuICAgIHJld2FyZHMucHVzaCh7IG1vZGU6IFZhbHVlTW9kZXMuZ01vZGUoZ20pLCByYW5rOiByYW5rLCByZXdhcmRzOiBwYWlycyB9KTtcbiAgfSk7XG4gIHJldHVybiByZXdhcmRzO1xufVxuXG5leHBvcnQgeyBnZXRSZXdhcmRzLCBsb2FkUmV3YXJkcywgbW9kZVJld2FyZHMsIHJld2FyZHMgfTtcbiJdfQ==