$themes: (dracula, slate, default);

$new-admonitions: (
  settings config: $drac-pink $clr-purple-a700 var(--md-admonition-icon--settings),
  new: $drac-yellow $clr-yellow-a700 var(--md-admonition-icon--new),
  sh-luv: $drac-dark-red $clr-red-a200 var(--md-admonition-icon--sh-luv)
) !default;

$old-admonitions: (
  note: $drac-dark-yellow,
  abstract: $drac-cyan,
  info: $drac-light-blue,
  tip: $drac-teal,
  success: $drac-green,
  question: $drac-light-green,
  warning: $drac-orange,
  failure: $drac-dark-red,
  danger: $drac-red,
  bug: $drac-dark-pink,
  example: $drac-purple,
  quote: $drac-grey
) !default;

/* Style new admonitions with dark or light colors */
:root > * {
  --md-admonition-icon--settings: url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 15.5A3.5 3.5 0 0 1 8.5 12 3.5 3.5 0 0 1 12 8.5a3.5 3.5 0 0 1 3.5 3.5 3.5 3.5 0 0 1-3.5 3.5m7.43-2.53c.04-.32.07-.64.07-.97 0-.33-.03-.66-.07-1l2.11-1.63c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.31-.61-.22l-2.49 1c-.52-.39-1.06-.73-1.69-.98l-.37-2.65A.506.506 0 0 0 14 2h-4c-.25 0-.46.18-.5.42l-.37 2.65c-.63.25-1.17.59-1.69.98l-2.49-1c-.22-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64L4.57 11c-.04.34-.07.67-.07 1 0 .33.03.65.07.97l-2.11 1.66c-.19.15-.25.42-.12.64l2 3.46c.12.22.39.3.61.22l2.49-1.01c.52.4 1.06.74 1.69.99l.37 2.65c.04.24.25.42.5.42h4c.25 0 .46-.18.5-.42l.37-2.65c.63-.26 1.17-.59 1.69-.99l2.49 1.01c.22.08.49 0 .61-.22l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.66Z"/></svg>');
  --md-admonition-icon--new: url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="m23 12-2.44-2.78.34-3.68-3.61-.82-1.89-3.18L12 3 8.6 1.54 6.71 4.72l-3.61.81.34 3.68L1 12l2.44 2.78-.34 3.69 3.61.82 1.89 3.18L12 21l3.4 1.46 1.89-3.18 3.61-.82-.34-3.68L23 12m-10 5h-2v-2h2v2m0-4h-2V7h2v6Z"/></svg>');
  --md-admonition-icon--sh-luv: url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-heart-fill" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z"/></svg>');

  // --md-admonition-bg-color: transparent;
  
  @each $names, $prop in $new-admonitions {
    $tint: nth($prop, 1);
    $tint2: nth($prop, 2);
    $name: nth($names, 1);

    /* --md-admonition-icon--#{$name}: svg-load("#{nth($prop, 3)}"); */
    // --md-admonition-bg-color--#{$name}: #{transparentize($tint2, 0.9)};

    --md-admonition-bg-color--#{$name}: var(--md-default-bg-color--ultra-dark);
    --md-admonition-icon-color--#{$name}: #{$tint2};
    --md-admonition-shadow-color--#{$name}: #{transparentize($tint2, 0.9)};
    
    // &[data-md-color-scheme="dracula"] {
    //   --md-admonition-bg-color--#{$name}: var(--md-default-bg-color--ultra-dark);
    //   --md-admonition-icon-color--#{$name}: #{$tint};
    //   --md-admonition-shadow-color--#{$name}: #{transparentize($tint, 0.9)};
    // }
  }

  @each $names, $tint in $old-admonitions {
    $name: nth($names, 1);
    --md-admonition-bg-color--#{$name}: var(--md-default-bg-color--ultra-dark);
    --md-admonition-icon-color--#{$name}: #{$tint};
    --md-admonition-shadow-color--#{$name}: #{transparentize($tint, 0.9)};
  }

  &[data-md-color-scheme="dracula"] {
    --md-admonition-icon-color: #{$drac-dark-yellow};
  }

}

/* Dark mode changes */
[data-md-color-scheme="dracula"] .md-typeset .admonition {
  border-color: var(--md-admonition-icon-color);
  > .admonition-title {
    background-color: var(--md-admonition-bg-color);
    &::before {
      background-color: var(--md-admonition-icon-color);
    }
    &::after {
      color: var(--md-admonition-icon-color);
    }
  }

  box-shadow: var(--md-shadow-z2);
}

/* Style existing admonitions with dark mode colors */
[data-md-color-scheme="dracula"] {
  @each $names, $prop in $old-admonitions {
    $name: nth($names, 1);

    // Define base class
    .md-typeset .admonition.#{$name} {
      border-color: var(--md-admonition-icon-color--#{$name});

      // Define base class
      > .admonition-title {
        background-color: var(--md-admonition-bg-color--#{$name});
        border-color: var(--md-admonition-icon-color--#{$name});

        // Icon
        &::before {
          background-color: var(--md-admonition-icon-color--#{$name});
        }
        &::after {
          color: var(--md-admonition-icon-color--#{$name});
        }
      }
    }

    // Define synonyms for base class
    @if length($names) > 1 {
      @for $n from 2 through length($names) {
        .#{nth($names, $n)} {
          @extend .#{$name};
        }
      }
    }
  }
}

[data-md-color-scheme="default"] {
  @each $names, $prop in $old-admonitions {
    $name: nth($names, 1);

    // Define base class
    .md-typeset .admonition.#{$name} {
      border-color: var(--md-admonition-icon-color--#{$name});

      // Define base class
      > .admonition-title {
        background-color: var(--md-admonition-bg-color--#{$name});
        border-color: var(--md-admonition-icon-color--#{$name});

        // Icon
        &::before {
          background-color: var(--md-admonition-icon-color--#{$name});
        }
        &::after {
          color: var(--md-admonition-icon-color--#{$name});
        }
      }
    }
  }
}

[data-md-color-scheme="slate"] {
  @each $names, $prop in $old-admonitions {
    $name: nth($names, 1);

    // Define base class
    .md-typeset .admonition.#{$name} {
      border-color: var(--md-admonition-icon-color--#{$name});

      // Define base class
      > .admonition-title {
        background-color: var(--md-admonition-bg-color--#{$name});
        border-color: var(--md-admonition-icon-color--#{$name});

        // Icon
        &::before {
          background-color: var(--md-admonition-icon-color--#{$name});
        }
        &::after {
          color: var(--md-admonition-icon-color--#{$name});
        }
      }
    }
  }
}

@each $names, $prop in $new-admonitions {
  $name: nth($names, 1);

  // Define base class
  .md-typeset .admonition.#{$name} {
    border-color: var(--md-admonition-icon-color--#{$name});

    > .admonition-title {
      background-color: var(--md-admonition-bg-color--#{$name});
      border-color: var(--md-admonition-icon-color--#{$name});

      // Icon
      &::before {
        width: px2rem(20px);
        height: px2rem(20px);
        background-color: var(--md-admonition-icon-color--#{$name});
        background-size: px2rem(20px);
        mask-image: var(--md-admonition-icon--#{$name});
        -webkit-mask-image: var(--md-admonition-icon--#{$name});
        content: "\a0";
      }
      &::after {
        color: var(--md-admonition-icon-color--#{$name});
      }
    }
  }

  // Define synonyms for base class
  @if length($names) > 1 {
    @for $n from 2 through length($names) {
      .#{nth($names, $n)} {
        @extend .#{$name};
      }
    }
  }
}

@media screen and (min-width: 45em) {
  .md-typeset .inline {
    width: fit-content;
    max-width: 20.7rem;
    margin-top: 0;
    margin-bottom: 0.8rem;
  }
}

.quote > p.admonition-title {
  align-items: center;
  padding: 10px;
}

.quote > p.admonition-title > a {
  margin-right: 15px;
}

// li > a > img {
//   border-radius: 0;
// }

.md-typeset .admonition-title {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.md-typeset details,
.md-typeset .admonition {
  border-radius: 0.3rem;
  overflow: hidden;
  border-width: 0;
  border-left-width: 4px;
}

.md-typeset .sh-luv > .admonition-title::before,
.md-typeset .sh-luv > summary::before {
  animation: heart 1000ms infinite;
}

.md-typeset .settings > .admonition-title::before,
.md-typeset .settings > summary::before {
  animation: spin 4s linear infinite;
}

@keyframes heart {
  0%,
  40%,
  80%,
  100% {
    transform: scale(1);
  }
  20%,
  60% {
    transform: scale(1.15);
  }
}

@keyframes spin {
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

.heart {
  color: crimson;
  animation: heart 1000ms infinite;
}
