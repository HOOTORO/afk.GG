.highlight {
  .kc { // Keyword constant
    color: var(--md-code-hl-constant-color);
  }

  .nc,  // Name, class
  .ne,  // Name, exception
  {
    color: var(--md-code-hl-class-color);
  }

  .mb {
    color: var(--md-code-hl-number-color);
  }

  .nb,  // Name, builtin
  .bp { // Name, builtin pseudo
    color: var(--md-code-hl-builtin-color);
  }

  .nn { // Name, namespace Name, namespace Name, namespace Name, namespace
    color: var(--md-code-hl-namespace-color);
  }

  .na,  // Name, attribute
  .nd,  // Name, decorator
  .ni { // Name, entity
    color: var(--md-code-hl-entity-color);
  }
  .nl,  // Name, label
  .nt { // Name, tag
    color: var(--md-code-hl-tag-color);
  }
}

.md-typeset {

  /* Allow code to look like code everywhere despite Material's current preference */
  *:not(pre) > code {
      margin: 0;
      padding: 0 px2em( 4px, 13.6px);
      color: var(--md-code-fg-color);
      background-color: var(--md-code-inline-bg-color);
      border-radius: px2rem(2px);
      box-shadow: none;
  }

  /* Code that is also a link */
  a {
    > code {
      color: inherit !important;
      background-color: var(--md-code-link-bg-color) !important;
      transition: color 125ms;
      transition: background-color 125ms;

      /* If we are linking highlighted, inline code, force it to just look like a code link */
      * {
        color: var(--md-typeset-a-color) !important;
      }

      &:hover {
        background-color: var(--md-code-link-accent-bg-color) !important;

        * {
          color: var(--md-accent-fg-color) !important;
        }
      }
    }
  }

  pre > code {
    outline: none;
  }

  /* Don't always like code breaking in table cells */
  td code {
    word-break: normal;
  }

  .highlight {

    /* Needed for tab preserving mode */
    tab-size: 8;

    + .result {
      border-width: px2rem(2px);
    }

    /* `pymdownx-inline` mode */
    [data-linenos] {

      /* Special line mode coloring */
      &.special::before {
        background-color: var(--md-code-special-bg-color);
      }
    }
  }

    /* Special line number coloring for tables */
  .highlighttable {
    .linenodiv {
      .special {
        margin-right: px2em(-8px, 13.6px);
        margin-left: px2em(-16px, 13.6px);
        padding-right: px2em(8px, 13.6px);
        padding-left: px2em(16px, 13.6px);
        background-color: var(--md-code-special-bg-color);
      }
    }
  }

  // Filename span
  .highlight span.filename {

    // Adjust margins and and general container look of code block
    + pre {
      margin-top: 0;

      code {
        border-top-left-radius: 0;
        border-top-right-radius: 0;
      }
    }

    // Style the filename banner
    position: relative;
    display: block;
    margin-top: 1em;
    padding: px2em(8px) px2em(16px, 13.6px) px2em(8px) px2em(40px, 13.6px);
    font-weight: 700;
    font-size: px2rem(13.6px);
    background-color: var(--md-code-title-bg-color);
    border-top-left-radius: px2rem(2px);
    border-top-right-radius: px2rem(2px);

    // Add code icon
    &::before {
      position: absolute;
      left: px2em(12px, 13.6px);
      width: px2em(20px, 13.6px);
      height: px2em(20px, 13.6px);
      background-color: var(--md-default-fg-color);
      mask-image: var(--highlight-code-a);
      mask-repeat: no-repeat;
      mask-size: contain;
      content: "";
    }
  }

  .collapse-code {
    position: relative;
    margin-top: 1em;
    margin-bottom: 1em;

    pre {
      margin-top: 0;
      margin-bottom: 0;
    }

    input{
      display: none;

      ~ .code-footer {
        width: 100%;
        margin: 0;
        padding: px2em(4px) px2em(8px) px2em(4px) px2em(0px);

        label {
          position: relative;
          margin: 0.05em;
          padding: 0.15em 0.8em;
          color: var(--md-primary-bg-color);
          font-size: 90%;
          background-color: var(--md-primary-fg-color);
          mask-repeat: no-repeat;
          mask-size: contain;
          border-radius: px2rem(2px);
          cursor: pointer;
          content: "";

          &:hover {
            background-color: var(--md-accent-fg-color);
          }

          &::before {
            position: absolute;
            top: 0.15em;
            left: 0.15em;
            display: block;
            box-sizing: border-box;
            width: 1.25em;
            height: 1.25em;
            background-color: var(--md-primary-bg-color);
            background-size: 1.25em;
            content: "";
          }

          &.expand {
            display: none;

            &::before {
              mask-image: svg-load("@mdi/svg/svg/arrow-expand.svg");
            }
          }
          &.collapse::before {
            mask-image: svg-load("@mdi/svg/svg/arrow-collapse.svg");
          }
        }
      }

      &:checked {
        ~ .code-footer label.expand {
          display: inline;
        }

        ~ .code-footer label.collapse {
          display: none;
        }

        + div.highlight code {
          max-height: px2em(150px);
          overflow: hidden;
        }

        ~ .code-footer {
          position: absolute;
          bottom: 0;
          left: 0;
          padding: px2em(32px) px2em(8px) px2em(8px) px2rem(16px);
          background-image: linear-gradient(to bottom,
              transparent,
              var(--md-default-bg-color) 80%
          100%);
        }
      }
    }
  }

  @include break-to-device(mobile) {

    > {
      diagram-div {
        margin-right: px2rem(-16px);
        margin-left: px2rem(-16px);
      }
      .collapse-code {
        margin-right: px2rem(-16px);
        margin-left: px2rem(-16px);

        label.collapse {
          left: px2rem(16px);
        }
      }
    }
  }
}
