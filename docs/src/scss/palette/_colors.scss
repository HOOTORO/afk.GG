@use "dracula" as drac;
@use "slate" as sla;
@use "default" as def;
@use "sass:color";
@use "sass:list";

@mixin progress-bar($green, $light-green, $yellow, $orange, $red, $dark-red) {
  /* Progressbar colors */
  --md-progress-stripe: var(--md-default-bg-color-lighter);
  --md-progress-100: #{$green};
  --md-progress-80: #{$light-green};
  --md-progress-60: #{$yellow};
  --md-progress-40: #{$orange};
  --md-progress-20: #{$red};
  --md-progress-0: #{$dark-red};
}

@mixin defy-colors($sfg, $sbg, $grd) {
  --md-default-bg: #{$grd};
  /* Dark specific colors */
  --md-default-bg-color-dark: #{color.adjust($sbg, $lightness: -3%)};
  --md-default-bg-color-darker: #{color.adjust($sbg, $lightness: -6%)};
  --md-default-bg-color-darkest: #{color.adjust($sbg, $lightness: -9%)};
  --md-default-bg-color-ultra-dark: #{color.adjust($sbg, $lightness: -15%)};
  --md-default-bg-color: var(--md-default-bg);
  --md-default-bg-color-light: #{color.adjust($sbg, $alpha: -0.3)};
  --md-default-bg-color-lighter: #{color.adjust($sbg, $alpha: -0.7)};
  --md-default-bg-color-lightest: #{color.adjust($sbg, $alpha: -0.88)};
  --md-default-bg-color-trans: #{color.adjust($sbg, $alpha: -1)};

  --md-default-fg-color: #{color.adjust($sfg, $alpha: -0.13)};
  --md-default-fg-color-light: #{color.adjust($sfg, $alpha: -0.46)};
  --md-default-fg-color-lighter: #{color.adjust($sfg, $alpha: -0.84)};
  --md-default-fg-color-lightest: #{color.adjust($sfg, $alpha: -0.93)};
  --md-default-autocomplete-fg-color: #{color.adjust($sfg, $alpha: -0.6)};

  // --md-default-bg-color-trans: rgb(100% 100% 100% / 0%);
}

@mixin highcode-colors($sfg, $sbg, $yellow, $orange, $red, $cyan, $purple) {
  /* General text */
  // --md-text-color: #{def.$text};
  --md-text-color: var(--md-default-fg-color);
  // --md-text-color: var(--text);

  // !
  /* Custom code colors */
  --md-code-fg-color: #{$sfg};
  --md-code-bg-color: #{$sbg};
  --md-code-title-bg-color: var(--md-default-bg-color-ultra-dark);
  --md-code-inline-bg-color: #{color.adjust($sbg, $lightness: 5%)};
  --md-code-hl-operator-color: #{drac.$pink};
  --md-code-hl-punctuation-color: #{$sfg};
  --md-code-hl-string-color: #{$yellow};
  --md-code-hl-special-color: #{$purple};
  --md-code-hl-number-color: #{$purple};
  --md-code-hl-keyword-color: #{drac.$pink};
  --md-code-hl-name-color: #{$sfg};
  --md-code-hl-constant-color: #{$purple};
  --md-code-hl-function-color: #{drac.$green};
  --md-code-hl-comment-color: #{drac.$blue};
  --md-code-hl-variable-color: #{$orange};
  --md-code-hl-generic-color: #{drac.$blue};
  --md-code-hl-color: #{drac.$selection};
  --md-code-hl-entity-color: #{drac.$green};
  --md-code-hl-tag-color: #{drac.$pink};
  --md-code-hl-namespace-color: #{$sfg};
  --md-code-hl-builtin-color: #{$cyan};
  --md-code-hl-class-color: #{$cyan};
  --md-code-special-bg-color: #{color.adjust($sbg, $lightness: -5%)};
  --md-code-alternate-bg-color: #{tint($sbg, 10%)};
  --md-code-link-bg-color: #{color.mix($cyan, $sbg, 15%)};
  --md-code-link-accent-bg-color: var(--md-code-link-bg-color);

  /* Various Material related color variables */
  --md-typeset-color: var(--md-default-fg-color);
  --md-typeset-a-color: #{$cyan};
  // --md-typeset-a-color: #{sla.$orange};
  // --md-typeset-a-color: #{def.$clr-cyan-500};
  --md-typeset-mark-color: #{color.mix($yellow, $sbg, 35%)};
  --md-typeset-del-color: #{color.mix(drac.$pink, $sbg, 35%)};
  --md-typeset-ins-color: #{color.mix(drac.$green, $sbg, 35%)};
  /* Keys(KB) colors */
  --md-typeset-kbd-color: var(--md-default-fg-color-lightest);
  --md-typeset-kbd-border-color: #{color.adjust(rgb(46 48 62), $lightness: -9%)};
  --md-typeset-kbd-accent-color: var(--md-default-fg-color-lighter);
  // !
  --md-header-fg-color: var(--md-text-color);
  --md-header-bg-color: var(--md-default-bg-color-darkest);
  --md-header-bg-color: var(--md-primary-fg-color);
  --md-footer-bg-color: #{sla.$foot-bg};
  --md-footer-fg-color: #{sla.$foot-fg};

  /* Admonition colors */
  --md-admonition-fg-color: var(--md-default-fg-color);
  --md-admonition-bg-color: var(--md-default-bg-color-dark);

  /* Shadow */
  // --md-shadow-z2: 0 #{px2rem(4px)} #{px2rem(10px)} hsl(0deg 0% 0% / 30%), 0 0 #{px2rem(1px)} hsl(0deg 0% 0% / 20%);
  --md-shadow-z2: 0 #{px2rem(14px)} #{px2rem(10px)} hsl(0deg 0% 0% / 30%), 0 0 #{px2rem(2px)} hsl(0deg 0% 0% / 20%);
  --md-shadow-z7: 0 0.2rem 0.6rem hsl(0deg 6% 27% / 29.3%), 0 0 0 0.1rem #47474716;
}

/* general stuff */
$glass: rgb(255 255 255 / 20%);
$glass-icon: rgb(255 255 255 / 30%);
$gradient: linear-gradient(35deg, #2e303d, #2e33ad);
$slider-radius: 20px;
$din-color: #bada55;
$d-code-bg: #424242;
$lin-color: rgb(255 0 0);

:root > * {
  // ? WHITE theme
  &[data-md-color-scheme="default"] {
    --theme-label: #{def.$label};
    // --input-bd-color: #{$lin-color};
    --nav-link: #{def.$nav-link};
    --nav-color: #{$glass};
    --containers-bg: #{def.$bg};
    --select-font-color: #{def.$sel-text};
    --md-footer-bg-color-dark: #{def.$foot-low};
    --md-header-bg-color: var(--md-primary-fg-color);
    --md-footer-bg-color: #{def.$foot-bg};
    --md-footer-fg-color: #{def.$foot-fg};
    --rnb: #{def.$rnb};
    @include highcode-colors(def.$fg, def.$bg, def.$yellow, def.$orange, def.$red, def.$cyan, def.$purple);
    @include defy-colors(def.$fg, def.$bg, def.$bg-radient);
    @include progress-bar(def.$green, def.$light-green, def.$yellow, def.$orange, def.$pink, def.$red);
    background-color: var(--md-default-bg-color);
  }

  // ? BLACK
  &[data-md-color-scheme="slate"] {
    --theme-label: #{sla.$label};

    /* Custom code colors */
    --select-font-color: #{sla.$sel-text};
    --input-bd-color: #{$din-color};
    --containers-bg: #{sla.$wrapper};
    --nav-color: #{sla.$wrapper};
    --nav-link: #{sla.$nav-link};
    @include highcode-colors(sla.$fg, sla.$bg, sla.$yellow, sla.$orange, sla.$red, sla.$cyan, sla.$purple);
    @include defy-colors(sla.$fg, sla.$bg, sla.$bg-radient);
    @include progress-bar(sla.$green, sla.$light-green, sla.$yellow, sla.$orange, sla.$pink, sla.$red);
    background-color: var(--md-default-bg-color);
  }

  // ? Dracula

  /* Dark mode color changes */
  &[data-md-color-scheme="dracula"] {
    --theme-label: #{drac.$label};

    /* Default color shades */
    --rnb: #{def.$rnb};
    --text: #{sla.$text};
    --input-bd-color: #{drac.$dark-pink};
    --select-font-color: #{sla.$sel-text};
    --nav-link: #{def.$nav-link};
    @include highcode-colors(drac.$fg, drac.$bg, drac.$yellow, drac.$orange, drac.$red, drac.$cyan, drac.$purple);
    @include defy-colors(drac.$fg, drac.$bg, drac.$bg-radient);
    @include progress-bar(drac.$green, drac.$light-green, drac.$yellow, drac.$orange, drac.$pink, drac.$red);
    background-color: var(--md-default-bg-color);
  }
}

/* ---------------------------------------------------------------------------- */

/* Rules: primary colors                                                      */

/* -------------------------------------------------------------------------- */

@each $name,
  $colors
    in (
      "red": drac.$red color.adjust(drac.$red, $lightness: 5%) color.adjust(drac.$red, $lightness: -5%),
      "pink": drac.$pink color.adjust(drac.$pink, $lightness: 5%) color.adjust(drac.$pink, $lightness: -5%),
      "purple": drac.$purple color.adjust(drac.$purple, $lightness: 5%) color.adjust(drac.$purple, $lightness: -5%),
      "deep-purple":
        drac.$purple
        color.adjust(drac.$purple, $lightness: 5%)
        color.adjust(drac.$purple, $lightness: -5%),
      "blue": drac.$blue color.adjust(drac.$blue, $lightness: 5%) color.adjust(drac.$blue, $lightness: -5%),
      "indigo": drac.$blue color.adjust(drac.$blue, $lightness: 5%) color.adjust(drac.$blue, $lightness: -5%),
      "light-blue": drac.$blue color.adjust(drac.$blue, $lightness: 5%) color.adjust(drac.$blue, $lightness: -5%),
      "cyan": drac.$cyan color.adjust(drac.$cyan, $lightness: 5%) color.adjust(drac.$cyan, $lightness: -5%),
      "teal": drac.$cyan color.adjust(drac.$cyan, $lightness: 5%) color.adjust(drac.$cyan, $lightness: -5%),
      "green": drac.$green color.adjust(drac.$green, $lightness: 5%) color.adjust(drac.$green, $lightness: -5%),
      "light-green": drac.$green color.adjust(drac.$green, $lightness: 5%) color.adjust(drac.$green, $lightness: -5%),
      "lime": drac.$green color.adjust(drac.$green, $lightness: 5%) color.adjust(drac.$green, $lightness: -5%),
      "yellow": drac.$yellow color.adjust(drac.$yellow, $lightness: 5%) color.adjust(drac.$yellow, $lightness: -5%),
      "amber": drac.$yellow color.adjust(drac.$yellow, $lightness: 5%) color.adjust(drac.$yellow, $lightness: -5%),
      "orange": drac.$orange color.adjust(drac.$orange, $lightness: 5%) color.adjust(drac.$orange, $lightness: -5%),
      "deep-orange": drac.$orange color.adjust(drac.$orange, $lightness: 5%) color.adjust(drac.$orange, $lightness: -5%)
    )
{
  /* Color palette */
  [data-md-color-scheme="dracula"][data-md-color-primary="#{$name}"],
  [data-md-color-scheme="dracula"] :not([data-md-color-scheme])[data-md-color-primary="#{$name}"] {
    --md-primary-code-bg-color: #{color.mix(drac.$bg, list.nth($colors, 1), 85%)};
    --md-primary-fg-color: hsla(#{hex2hsl(list.nth($colors, 1))}, 1);
    --md-primary-fg-color-transparent: hsla(#{hex2hsl(list.nth($colors, 1))}, 1);
    --md-primary-fg-color-light: hsla(#{hex2hsl(list.nth($colors, 2))}, 1);
    --md-primary-fg-color-dark: hsla(#{hex2hsl(list.nth($colors, 3))}, 1);
    --md-primary-bg-color: var(--md-default-bg-color);
    --md-primary-bg-color-light: var(--md-default-bg-color-light);
  }
}

/* ---------------------------------------------------------------------------- */

/* Rules: accent colors                                                       */

/* -------------------------------------------------------------------------- */

@each $name,
  $color
    in (
      "red": color.adjust(drac.$red, $lightness: -5%),
      "pink": color.adjust(drac.$pink, $lightness: -5%),
      "purple": color.adjust(drac.$purple, $lightness: -5%),
      "deep-purple": color.adjust(drac.$purple, $lightness: -5%),
      "blue": color.adjust(drac.$blue, $lightness: -5%),
      "indigo": color.adjust(drac.$blue, $lightness: -5%),
      "light-blue": color.adjust(drac.$blue, $lightness: -5%),
      "cyan": color.adjust(drac.$cyan, $lightness: -5%),
      "teal": color.adjust(drac.$cyan, $lightness: -5%),
      "green": color.adjust(drac.$green, $lightness: -5%),
      "light-green": color.adjust(drac.$green, $lightness: -5%),
      "lime": color.adjust(drac.$green, $lightness: -5%),
      "yellow": color.adjust(drac.$yellow, $lightness: -5%),
      "amber": color.adjust(drac.$yellow, $lightness: -5%),
      "orange": color.adjust(drac.$orange, $lightness: -5%),
      "deep-orange": color.adjust(drac.$orange, $lightness: -5%)
    )
{
  /* Color palette */
  [data-md-color-scheme="dracula"][data-md-color-accent="#{$name}"],
  [data-md-color-scheme="dracula"] :not([data-md-color-scheme])[data-md-color-primary="#{$name}"] {
    --md-code-link-accent-bg-color: #{color.mix($color, drac.$bg, 15%)};
    --md-accent-fg-color: hsla(#{hex2hsl($color)}, 1);
    --md-accent-fg-color-transparent: hsla(#{hex2hsl($color)}, 0.1);
    --md-accent-bg-color: var(--md-default-bg-color);
    --md-accent-bg-color-light: var(--md-default-bg-color-light);
  }
}
